name: build-publish-jenkins-image
on:
#  push:
#    branches:
#      - main
  workflow_dispatch:
  schedule:
    - cron: '0 0 5,20 * *'

permissions:
  contents: write


jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Git config and create new tag
        run: |
          # Run bash script to get new tag
          bash get_latest_version_create_tag.sh

      - name: Log in to Docker Hub
        env:
          NEW_VERSION: $NEW_VERSION
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      
      - name: Build and publish docker image with tag
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/jenkins-core-image:${{ env.NEW_VERSION }}
          build-args: |
            "JENKINS_USER=${{ secrets.JENKINS_USER }}"
            "JENKINS_PASS=${{ secrets.JENKINS_PASS }}"
            "GITHUB_APP_KEY=${{ secrets.GH_APP_KEY }}"
            "GITHUB_APP_ID=${{ secrets.GH_APP_ID }}"    

      - name: Build and Publish docker image with latest tag
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/jenkins-core-image:latest
          build-args: |
            "JENKINS_USER=${{ secrets.JENKINS_USER }}"
            "JENKINS_PASS=${{ secrets.JENKINS_PASS }}"
            "GITHUB_APP_KEY=${{ secrets.GH_APP_KEY }}"
            "GITHUB_APP_ID=${{ secrets.GH_APP_ID }}"

      - name: set up docker and scan docker image for vulnerabilities
        uses: docker-practice/actions-setup-docker@master
      - run: |
          set -x
          docker version
          docker run -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image  ${{ secrets.DOCKERHUB_USERNAME }}/jenkins-core-image:latest
